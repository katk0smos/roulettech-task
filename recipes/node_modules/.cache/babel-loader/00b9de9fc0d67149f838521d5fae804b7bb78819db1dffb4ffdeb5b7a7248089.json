{"ast":null,"code":"const API_URL = 'http://localhost:8000/api';\nexport const fetchRecipes = async () => {\n  const response = await fetch(`${API_URL}/recipes/`);\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to fetch recipes');\n  }\n  return response.json();\n};\nexport const addRecipe = async newRecipe => {\n  const response = await fetch(`${API_URL}/recipes/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newRecipe)\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to add recipe');\n  }\n  return response.json();\n};\nexport const rateRecipe = async (recipeId, rating) => {\n  const response = await fetch(`${API_URL}/recipes/${recipeId}/rate/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      value: rating\n    })\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to rate recipe');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","fetchRecipes","response","fetch","ok","errorData","json","Error","error","addRecipe","newRecipe","method","headers","body","JSON","stringify","rateRecipe","recipeId","rating","value"],"sources":["/home/kat/projects/web/roulettech-inc-interview/recipes/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8000/api';\n\nexport const fetchRecipes = async () => {\n  const response = await fetch(`${API_URL}/recipes/`);\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to fetch recipes');\n  }\n  return response.json();\n};\n\nexport const addRecipe = async (newRecipe) => {\n  const response = await fetch(`${API_URL}/recipes/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newRecipe),\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to add recipe');\n  }\n  return response.json();\n};\n\nexport const rateRecipe = async (recipeId, rating) => {\n  const response = await fetch(`${API_URL}/recipes/${recipeId}/rate/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ value: rating }),\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Failed to rate recipe');\n  }\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC;EACnD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,yBAAyB,CAAC;EAC/D;EACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAOC,SAAS,IAAK;EAC5C,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,EAAE;IAClDW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,sBAAsB,CAAC;EAC5D;EACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;EACpD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,YAAYiB,QAAQ,QAAQ,EAAE;IACnEN,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEI,KAAK,EAAED;IAAO,CAAC;EACxC,CAAC,CAAC;EACF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,uBAAuB,CAAC;EAC7D;EACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}