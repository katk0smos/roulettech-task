{"ast":null,"code":"const API_URL = 'http://localhost:8000/api';\nexport const fetchRecipes = async () => {\n  const response = await fetch(`${API_URL}/recipes/`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch recipes');\n  }\n  return response.json();\n};\nexport const addRecipe = async newRecipe => {\n  const response = await fetch(`${API_URL}/recipes/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newRecipe)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to add recipe');\n  }\n  return response.json();\n};\nexport const rateRecipe = async (recipeId, rating) => {\n  const response = await fetch(`${API_URL}/recipes/${recipeId}/rate/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      rating\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to rate recipe');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","fetchRecipes","response","fetch","ok","Error","json","addRecipe","newRecipe","method","headers","body","JSON","stringify","rateRecipe","recipeId","rating"],"sources":["/home/kat/projects/web/roulettech-inc-interview/recipes/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8000/api';\n\nexport const fetchRecipes = async () => {\n  const response = await fetch(`${API_URL}/recipes/`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch recipes');\n  }\n  return response.json();\n};\n\nexport const addRecipe = async (newRecipe) => {\n  const response = await fetch(`${API_URL}/recipes/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newRecipe),\n  });\n  if (!response.ok) {\n    throw new Error('Failed to add recipe');\n  }\n  return response.json();\n};\n\nexport const rateRecipe = async (recipeId, rating) => {\n  const response = await fetch(`${API_URL}/recipes/${recipeId}/rate/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ rating }),\n  });\n  if (!response.ok) {\n    throw new Error('Failed to rate recipe');\n  }\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC;EACnD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,SAAS,IAAK;EAC5C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,EAAE;IAClDS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;EACpD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,YAAYe,QAAQ,QAAQ,EAAE;IACnEN,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG;IAAO,CAAC;EACjC,CAAC,CAAC;EACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}